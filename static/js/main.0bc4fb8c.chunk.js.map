{"version":3,"sources":["routes.jsx","App.js","config/routes.js","store/action-types.js","store/actions.js","history.js","store/selectors.js","components/table/sort-link.jsx","components/user-card/user-card.jsx","components/table/table.jsx","components/preloader/preloader.jsx","components/add-user-form/add-user-form.jsx","components/search-bar/search-bar.jsx","components/pagination/pagination.jsx","components/pages/enter-page.jsx","components/pages/users-page.jsx","store/reducers/index.js","config/api-endpoints.js","config/status-codes.js","api/api.js","api/operations.js","sagas/sagas.js","index.js"],"names":["Component","App","children","className","routeConfig","INDEX","TABLE","ActionType","FETCH_INITIAL_DATA","SET_DATA","GET_DATA","SORT_DATA","ADD_USER","FILTER_USER","CLEAR","REMOVE_USER","ActionCreator","data","isLoad","type","payload","url","id","user","filter","sortField","sortType","history","createBrowserHistory","sortParamsSelector","state","sortBy","dataStateSelector","isUsersLoaded","filterDataSelector","createSelector","usersData","filterParam","users","lastName","toLowerCase","includes","sortDataSelector","sortParams","sort","a","b","SortLink","label","useSelector","sortDirection","dispatch","useDispatch","onClick","UserCard","console","log","firstName","description","address","streetAddress","city","zip","Table","currentUsers","useState","setUser","map","item","key","phone","href","email","e","Preloader","AddUser","useRef","mail","onSubmit","useCallback","preventDefault","current","value","placeholder","ref","SearchBar","onChange","target","Pagination","usersPerPage","totalUsers","paginate","pageNumbers","i","Math","ceil","push","number","exact","path","component","currentPage","setCurrentPage","indexOfLastPost","indexOfFirstPost","slice","length","pageNumber","initialState","error","ApiEndpoint","StatusCode","createAPI","onLoginFail","api","axios","create","baseURL","onSuccess","response","onFail","err","request","responseURL","indexOf","SIGN_IN","status","interceptors","use","fetchUsersSaga","sagaWatcher","fetch","then","json","put","all","takeLatest","composeEnhancers","window","compose","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","sagaMiddleware","createSagaMiddleware","store","createStore","action","SORT_BY","applyMiddleware","run","ReactDOM","render","StrictMode","routes","document","getElementById"],"mappings":"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","file":"static/js/main.0bc4fb8c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {  BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\r\nimport {App} from './App';\r\nimport routeConfig from './config/routes';\r\nimport {Enter} from './components/pages/enter-page';\r\nimport {UsersPage} from './components/pages/users-page';\r\n\r\n\r\n\r\nconst WrappedComponent = (Component) => () =>(\r\n    <App>\r\n        <Component/>\r\n    </App>\r\n);\r\n\r\nexport default(\r\n<Switch>\r\n    <Route\r\n    exact = {true}\r\n    path={routeConfig.INDEX}\r\n    component = {Enter}\r\n    />\r\n     <Route\r\n    exact = {true}\r\n    path={routeConfig.TABLE}\r\n    component = {WrappedComponent(UsersPage)}\r\n    />\r\n</Switch>\r\n)","import React from 'react';\nimport './App.css';\n\nexport const App = ({ children }) => {  \n  return (\n    <div className=\"App block\">\n      <main className=\"block__inner\">{children}</main>\n    </div>\n  );\n};\n","const routeConfig = {\r\n    INDEX: \"/\",\r\n    TABLE: \"/table\"\r\n}\r\nexport default routeConfig;","/* eslint-disable */\nexport const ActionType = {\n  FETCH_INITIAL_DATA: 'FETCH_INITIAL_DATA',\n  SET_DATA: 'SET_DATA',\n  GET_DATA: 'GET_DATA',\n  SORT_DATA: 'SORT_DATA',\n  ADD_USER: 'ADD_USER',\n  FILTER_USER: 'FILTER_USER',\n  CLEAR: 'CLEAR',\n  REMOVE_USER: 'REMOVE_USER',\n}","import {ActionType} from './action-types';\n// Передача данных в стор \nexport const ActionCreator = {\n    setData: (data, isLoad) =>({\n      type: ActionType.SET_DATA,\n      payload: {data, isLoad}\n    }),\n    getData: (url) =>({\n      type: ActionType.GET_DATA,\n      url\n    }),\n    removeUser: (id) => ({\n      type: ActionType.REMOVE_USER,\n      payload: id\n    }),\n    addUser:  (user) => ({\n      type: ActionType.ADD_USER,\n      payload: user\n    }),\n    filterUser: (filter) => ({\n      type: ActionType.FILTER_USER,\n      payload: filter\n    }),\n    sortData: (sortField, sortType) => ({\n      type: ActionType.SORT_DATA,\n      payload: {sortField, sortType}\n    })\n    \n};\n\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory()","import Namespace from './reducers/name-space';\nimport {createSelector} from 'reselect';\n\nexport const sortParamsSelector = (state) => state.sortBy;\nexport const usersDataSelector = (state) => state.usersData;\nexport const filterParamSelector = (state) => state.filterParam;\nexport const dataStateSelector = (state) => state.isUsersLoaded;\n\n\nexport const filterDataSelector = createSelector(\n    usersDataSelector,\n    filterParamSelector,\n    (users, filterParam) => {\n        if(users != null){\n            return [...users].filter((user) => user.lastName.toLowerCase().includes(filterParam.toLowerCase()))\n        }\n    }\n);\n\nexport const sortDataSelector = createSelector(\n    sortParamsSelector,\n    filterDataSelector,\n    (sortParams, users) =>\n    {\n        return [...users].sort(function (a, b){\n            if(sortParams.sortType === 'asc'){\n                return a[sortParams.sortField] > b[sortParams.sortField] ? 1 : -1;\n            }\n            else if (sortParams.sortType === 'desc'){\n                return a[sortParams.sortField] < b[sortParams.sortField] ? 1 : -1;\n            }\n            return users\n        }\n)})\n\n","import React, { useState, useEffect, useCallback }  from 'react';\r\nimport {ActionCreator} from \"../../store/actions\"\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {sortParamsSelector} from '../../store/selectors';\r\n  \r\n\r\nexport const SortLink = ({label, sortField}) => \r\n{\r\n    const sortParams = useSelector(sortParamsSelector);\r\n    const sortType = useSelector((state) => state.sortBy.sortType)\r\n    const sortDirection = sortType === 'asc' ? 'desc' : 'asc';\r\n    const dispatch = useDispatch();\r\n    return(\r\n    <th className=\"table-link\"\r\n      onClick={() => {\r\n        dispatch(ActionCreator.sortData(sortField, sortDirection))\r\n        }\r\n      }\r\n    >\r\n      {sortParams.sortField == sortField ? <div className=\"sort__active\">{label} {sortParams.sortType}</div> : label} \r\n    </th>\r\n    )\r\n  };\r\n","import React, { useState, useEffect, useCallback }  from 'react';\r\nimport {ActionCreator} from \"../../store/actions\"\r\nimport {useSelector, useDispatch} from 'react-redux';\r\n\r\n\r\nexport const UserCard = ({user}) => {\r\n    console.log(user)\r\n    return(\r\n        <div className=\"user__info\">\r\n            <p>Выбран пользователь <b>{user.firstName} {user.lastName}</b></p>\r\n            <h4>Описание:</h4>\r\n            <textarea>\r\n            {user.description}\r\n            </textarea>\r\n            <p>Адрес проживания: <b>{user.address.streetAddress}</b></p>\r\n            <p>Город: <b>{user.address.city}</b></p>\r\n            <p>Провинция/штат: <b>{user.address.state}</b></p>\r\n            <p>Индекс: <b>{user.address.zip}</b></p>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport {ActionCreator} from \"../../store/actions\"\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {SortLink} from \"./sort-link\";\r\nimport {UserCard} from '../user-card/user-card';\r\nimport {filterDataSelector} from '../../store/selectors'\r\n\r\n\r\n\r\nexport const Table = ({currentUsers}) => {\r\n  const dispatch = useDispatch();\r\n  const [user, setUser] = useState('');\r\n  return(\r\n    <>\r\n    <table className=\"table\">\r\n    <thead>\r\n     <tr>\r\n      <SortLink\r\n        label=\"Id\"\r\n        sortField=\"id\"\r\n        />\r\n      <SortLink\r\n        label=\"First Name\"\r\n        sortField=\"firstName\"\r\n        />\r\n       <SortLink\r\n         label=\"Last Name\"\r\n         sortField=\"lastName\"\r\n       />\r\n       <SortLink\r\n         label=\"Email\"\r\n         sortField=\"email\"\r\n       />\r\n       <SortLink\r\n         label=\"Phone\"\r\n         sortField=\"phone\"\r\n       />\r\n     </tr>\r\n    </thead>\r\n    <tbody>\r\n    {currentUsers.map(item => (\r\n      <tr key={item.phone} onClick={() => setUser(item)} className=\"people__row\">\r\n        <td>{item.id}</td>\r\n        <td>{item.firstName}</td>\r\n        <td>{item.lastName}</td>\r\n        <td><a href={item.email}>{item.email}</a></td>\r\n        <td><a href={item.phone}>{item.phone}</a></td>\r\n        <td><button onClick={(e) => dispatch(ActionCreator.removeUser(item.id))}>Delete</button></td>\r\n      </tr>\r\n    ))}\r\n  </tbody>\r\n  </table>\r\n  {user ? <UserCard user={user}/> : null}\r\n  </>\r\n  )\r\n}\r\n\r\n\r\n","import React, { useState, useEffect, useCallback }  from 'react';\r\n\r\n\r\nexport const Preloader = () =>{\r\n    return(\r\n    <div className=\"lds-ring\">\r\n        <div>\r\n        </div>\r\n        <div>\r\n        </div>\r\n        <div>\r\n        </div>\r\n        <div>\r\n        </div>\r\n    </div>\r\n    )\r\n}","import React, { useState, useEffect, useCallback, useRef }  from 'react';\r\nimport {ActionCreator} from \"../../store/actions\"\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport const AddUser = () => {\r\n    const id = useRef(null);\r\n    const firstName = useRef(null);\r\n    const lastName = useRef(null);\r\n    const mail = useRef(null);\r\n    const phone = useRef(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const onSubmit = useCallback((e)=> {\r\n        e.preventDefault();\r\n        dispatch(ActionCreator.addUser({\r\n            id: id.current.value,\r\n            firstName: firstName.current.value,\r\n            lastName: lastName.current.value,\r\n            email: mail.current.value,\r\n            phone: phone.current.value,\r\n            address: {\r\n                streetAddress: '',\r\n                city: '',\r\n                state: '',\r\n                zip: ''\r\n            },\r\n            description: '',\r\n        }));\r\n        id.current.value = '';\r\n        firstName.current.value = '';\r\n        lastName.current.value = '';\r\n        phone.current.value = '';\r\n        mail.current.value = '';\r\n        return false;\r\n    }, [dispatch, id, firstName, lastName, mail, phone]);\r\n\r\n\r\n    return(\r\n       <form className=\"form__add-user\" onSubmit={onSubmit}>\r\n        <input placeholder=\"id\" type=\"number\" ref={id}/>\r\n        <input placeholder=\"Имя\" ref={firstName}/>\r\n        <input placeholder=\"Фамилия\" ref={lastName}/>\r\n        <input placeholder=\"Почта\" type=\"email\" ref={mail}/>\r\n        <input placeholder=\"Телефон\" type=\"tel\" ref={phone}/>\r\n        <button>Добавить</button> \r\n       </form> \r\n    )\r\n}","import React, { useState } from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport { createSelector } from \"reselect\";\r\nimport {Link, Route} from \"react-router-dom\";\r\nimport {ActionCreator} from \"../../store/actions\";\r\n\r\nexport const SearchBar = () => {\r\n    const dispatch = useDispatch();\r\n    //Получение списка после поиска\r\n    if (ActionCreator.filterUser && ActionCreator.filterUser != null) {\r\n        return (\r\n         <div className=\"search\">\r\n           <form className=\"search--input\">\r\n                <input\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                onChange={e => dispatch(ActionCreator.filterUser(e.target.value))}\r\n                />  \r\n            </form> \r\n        </div> \r\n        )   \r\n    }\r\n}","import React, { useState } from 'react';\r\nimport {ActionCreator} from \"../../store/actions\"\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {sortDataSelector} from '../../store/selectors'\r\n\r\nexport const Pagination = ({ usersPerPage, totalUsers, paginate }) =>{\r\n\r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(totalUsers / usersPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n    return(\r\n        <div className=\"pagination\">\r\n          {pageNumbers.map(number => (\r\n              <a key={number} onClick={() => paginate(number)} className='page-link'>\r\n                {number}\r\n              </a>\r\n          ))}\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect, useCallback }  from 'react';\r\nimport {ActionCreator} from \"../../store/actions\"\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {history} from '../../history.js'\r\nexport const Enter = () =>{\r\n    const dispatch = useDispatch();\r\n    var bigData = `http://www.filltext.com/?rows=1000&id={number|1000}&firstName={firstName}&delay=3&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}`\r\n    var smallData = `http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}`\r\n    \r\n\r\n    return(\r\n        <>\r\n            <button onClick={(e)=> {\r\n                dispatch(ActionCreator.getData(smallData))                \r\n            }}>32 записи</button>\r\n            <button onClick={(e)=> {\r\n                dispatch(ActionCreator.getData(bigData))                \r\n            }}>1000 записей</button>\r\n        </>\r\n    )\r\n\r\n}","import React, { useState, useEffect } from 'react';\r\nimport {ActionCreator} from \"../../store/actions\"\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Table} from '../table/table';\r\nimport {dataStateSelector, sortDataSelector} from '../../store/selectors'\r\nimport {Preloader} from '../preloader/preloader';\r\nimport {AddUser} from\"../add-user-form/add-user-form\";\r\nimport {SearchBar} from '../search-bar/search-bar';\r\nimport {Pagination} from '../pagination/pagination';\r\n\r\n\r\nexport const UsersPage = () => {\r\n\r\n    const users = useSelector(sortDataSelector);\r\n   \r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [usersPerPage] = useState(50);\r\n    \r\n    const indexOfLastPost = currentPage * usersPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - usersPerPage;\r\n    const currentUsers = users.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    \r\n    const isUsersLoaded = useSelector(dataStateSelector);\r\nreturn(\r\nisUsersLoaded ? \r\n    <>\r\n        <SearchBar/>\r\n        <AddUser/>\r\n        <Table currentUsers={currentUsers}/>\r\n        <Pagination\r\n        usersPerPage={usersPerPage}\r\n        totalUsers={users.length}\r\n        paginate={paginate}/>\r\n    </>\r\n    : \r\n    <Preloader/>\r\n  )    \r\n}","import {ActionType} from '../action-types';\nconst initialState = {\n    error: '',\n    usersData: [],\n    sortBy:'',\n    filterParam: '',\n    isUsersLoaded: false,\n};\n\nexport default function appReducer(state = initialState, action) {\n    switch (action.type) {\n      case ActionType.SET_DATA:\n        return {\n          ...state,\n          usersData: action.payload.data,\n          isUsersLoaded: action.payload.isLoad\n        }\n      case ActionType.GET_DATA:\n        return{\n          ...state\n        }\n      case ActionType.SORT_BY:\n        return {\n          ...state,\n          sortBy: action.sortType\n        }\n      case ActionType.ADD_USER:\n        return {\n          ...state,\n          usersData: [action.payload, ...state.usersData] \n        };\n      case ActionType.REMOVE_USER:\n        return {\n          ...state,\n          usersData: state.usersData.filter(item => item.id !== action.payload),\n        } \n      case ActionType.SORT_DATA:\n        return { \n        ...state,\n        sortBy: {\n          sortField: action.payload.sortField,\n          sortType: action.payload.sortType\n          }\n        }\n      case ActionType.FILTER_USER:\n        return{\n          ...state,\n          filterParam: action.payload\n        }\n    default: return state;\n  }\n}\n","export const BASE_HOST = `./`;\r\n\r\nexport const ApiEndpoint = {\r\n    BASE_URL: '/',\r\n\r\n}\r\n","export const StatusCode = {\n  OK: 200,\n  NOT_MODIFIED: 304,\n  BAD_REQUEST: 400,\n  UNAUTHORIZED: 401,\n  FORBIDDEN: 403,\n  NOT_FOUND: 404,\n  INTERNAL_SERVER_ERROR: 500,\n  SERVICE_UNAVAILABLE: 503\n}\n","import axios, {AxiosInstance} from 'axios'; // eslint-disable-line\r\n\r\nimport {StatusCode} from '../config/status-codes';\r\nimport routeConfig from '../config/routes';\r\nimport {ApiEndpoint} from '../config/api-endpoints';\r\n\r\nexport const createAPI = (onLoginFail = null) => {\r\n    const api = axios.create({\r\n      baseURL: ApiEndpoint.BASE_URL,\r\n    });\r\n  \r\n    const onSuccess = (response) => response;\r\n  \r\n    const onFail = (err) => {\r\n      if (err.response.request &&\r\n        err.response.request.responseURL.indexOf(routeConfig.SIGN_IN) === -1 &&\r\n        err.response.status === StatusCode.FORBIDDEN) {\r\n        if(onLoginFail) onLoginFail();\r\n      }\r\n  \r\n      throw err;\r\n    };\r\n  \r\n    api.interceptors.response.use(onSuccess, onFail);\r\n  \r\n    return api;\r\n  };\r\nexport default createAPI;\r\n","import {ApiEndpoint} from '../config/api-endpoints';\r\nimport {ActionCreator} from '../store/actions';\r\nimport {history} from '../history';\r\nimport {createAPI} from './api';\r\nimport routeConfig from '../config/routes';\r\n\r\nconst api = createAPI(() => history.push(routeConfig.INDEX));\r\n\r\n\r\nexport const Operation = {\r\n  \r\n};\r\n","import { call, put, all, takeLatest, select, throttle } from 'redux-saga/effects';\r\nimport {ActionType} from '../store/action-types';\r\nimport {Operation} from '../api/operations';\r\nimport {ActionCreator} from '../store/actions';\r\nimport {history} from '../history.js'\r\n\r\n\r\n\r\nfunction* fetchUsersSaga({url}) {\r\n    history.push('/table')\r\n    const data = yield fetch(`${url}`)\r\n    .then(response => response.json());\r\n\r\n    yield put(ActionCreator.setData(data, true));\r\n\r\n}\r\n\r\n\r\nexport default function* sagaWatcher() {\r\n  yield all([\r\n    takeLatest(ActionType.GET_DATA, fetchUsersSaga)\r\n  ]);\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport routes from './routes';\nimport {Router} from \"react-router-dom\";\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport {Provider} from 'react-redux';\nimport { history } from './history.js'\n\n// Store & Api\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './store/reducers';\nimport sagaWatcher from './sagas/sagas';\nimport {ActionType} from './store/action-types';\n\n// Components\nconst composeEnhancers = typeof window === 'undefined' ? compose : window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware  = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware)),\n);\nsagaMiddleware.run(sagaWatcher);\nconst action = type => store.dispatch({type});\naction(ActionType.FETCH_INITIAL_DATA);\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider {...{store}}>\n      <Router {...{history}}>\n        {routes}\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}