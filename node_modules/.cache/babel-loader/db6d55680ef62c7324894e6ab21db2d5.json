{"ast":null,"code":"import { call, put, all, takeLatest, select, throttle } from 'redux-saga/effects';\nimport { ActionType } from '../store/action-types';\nimport { Operation } from '../api/operations';\nimport { ActionCreator } from '../store/actions';\nimport { get } from \"lodash\";\n\nfunction* setSortDataSaga(action) {\n  const sortData = yield select;\n}\n\nfunction* fetchInitialData() {\n  const data = yield fetch('http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}').then(response => response.json());\n  yield put(ActionCreator.setData(data));\n}\n\nexport default function* sagaWatcher() {\n  yield all([takeLatest(ActionType.FETCH_INITIAL_DATA, fetchInitialData), throttle(1000, ActionType.SET_SORT, setSortDataSaga)]);\n}","map":{"version":3,"sources":["C:/Users/corbie/Desktop/testFuture/src/sagas/sagas.js"],"names":["call","put","all","takeLatest","select","throttle","ActionType","Operation","ActionCreator","get","setSortDataSaga","action","sortData","fetchInitialData","data","fetch","then","response","json","setData","sagaWatcher","FETCH_INITIAL_DATA","SET_SORT"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,MAArC,EAA6CC,QAA7C,QAA6D,oBAA7D;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAASC,GAAT,QAAoB,QAApB;;AAEA,UAAUC,eAAV,CAA0BC,MAA1B,EAAiC;AAC/B,QAAMC,QAAQ,GAAG,MAAMR,MAAvB;AACD;;AAED,UAAUS,gBAAV,GAA6B;AACzB,QAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,uLAAD,CAAL,CAClBC,IADkB,CACbC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADC,CAAnB;AAEA,QAAMjB,GAAG,CAACO,aAAa,CAACW,OAAd,CAAsBL,IAAtB,CAAD,CAAT;AACH;;AAGD,eAAe,UAAUM,WAAV,GAAwB;AACrC,QAAMlB,GAAG,CAAC,CACRC,UAAU,CAACG,UAAU,CAACe,kBAAZ,EAAgCR,gBAAhC,CADF,EAERR,QAAQ,CAAC,IAAD,EAAOC,UAAU,CAACgB,QAAlB,EAA4BZ,eAA5B,CAFA,CAAD,CAAT;AAID","sourcesContent":["import { call, put, all, takeLatest, select, throttle } from 'redux-saga/effects';\r\nimport {ActionType} from '../store/action-types';\r\nimport {Operation} from '../api/operations';\r\nimport {ActionCreator} from '../store/actions';\r\nimport { get } from \"lodash\";\r\n\r\nfunction* setSortDataSaga(action){\r\n  const sortData = yield select\r\n}\r\n\r\nfunction* fetchInitialData() {\r\n    const data = yield fetch('http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}')\r\n    .then(response => response.json(),);\r\n    yield put(ActionCreator.setData(data))   \r\n}\r\n\r\n\r\nexport default function* sagaWatcher() {\r\n  yield all([\r\n    takeLatest(ActionType.FETCH_INITIAL_DATA, fetchInitialData),\r\n    throttle(1000, ActionType.SET_SORT, setSortDataSaga)\r\n      ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}