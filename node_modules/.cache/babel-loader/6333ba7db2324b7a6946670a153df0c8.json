{"ast":null,"code":"import { call, put, all, takeLatest, select, throttle } from 'redux-saga/effects';\nimport { ActionType } from '../store/action-types';\nimport { Operation } from '../api/operations';\nimport { ActionCreator } from '../store/actions';\nimport { get } from \"lodash\";\nimport { sortDataSelector } from '../store/selectors';\n\nfunction* setSortDataSaga(action) {\n  const sortData = yield select(state => sortDataSelector(state)(action.payload));\n  console.log(action);\n}\n\nfunction* fetchInitialData() {\n  const data = yield fetch('http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}').then(response => response.json());\n  yield put(ActionCreator.setData(data));\n}\n\nexport default function* sagaWatcher() {\n  yield all([takeLatest(ActionType.FETCH_INITIAL_DATA, fetchInitialData), takeLatest(ActionType.SORT_DATA, setSortDataSaga)]);\n}","map":{"version":3,"sources":["C:/Users/corbie/Desktop/testFuture/src/sagas/sagas.js"],"names":["call","put","all","takeLatest","select","throttle","ActionType","Operation","ActionCreator","get","sortDataSelector","setSortDataSaga","action","sortData","state","payload","console","log","fetchInitialData","data","fetch","then","response","json","setData","sagaWatcher","FETCH_INITIAL_DATA","SORT_DATA"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,MAArC,EAA6CC,QAA7C,QAA6D,oBAA7D;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAASC,GAAT,QAAoB,QAApB;AACA,SAAQC,gBAAR,QAA+B,oBAA/B;;AAEA,UAAUC,eAAV,CAA0BC,MAA1B,EAAiC;AAC/B,QAAMC,QAAQ,GAAG,MAAMT,MAAM,CAAEU,KAAD,IAAWJ,gBAAgB,CAACI,KAAD,CAAhB,CAAwBF,MAAM,CAACG,OAA/B,CAAZ,CAA7B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACD;;AAED,UAAUM,gBAAV,GAA6B;AACzB,QAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,uLAAD,CAAL,CAClBC,IADkB,CACbC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADC,CAAnB;AAEA,QAAMtB,GAAG,CAACO,aAAa,CAACgB,OAAd,CAAsBL,IAAtB,CAAD,CAAT;AACH;;AAGD,eAAe,UAAUM,WAAV,GAAwB;AACrC,QAAMvB,GAAG,CAAC,CACRC,UAAU,CAACG,UAAU,CAACoB,kBAAZ,EAAgCR,gBAAhC,CADF,EAERf,UAAU,CAACG,UAAU,CAACqB,SAAZ,EAAuBhB,eAAvB,CAFF,CAAD,CAAT;AAID","sourcesContent":["import { call, put, all, takeLatest, select, throttle } from 'redux-saga/effects';\r\nimport {ActionType} from '../store/action-types';\r\nimport {Operation} from '../api/operations';\r\nimport {ActionCreator} from '../store/actions';\r\nimport { get } from \"lodash\";\r\nimport {sortDataSelector} from '../store/selectors'\r\n\r\nfunction* setSortDataSaga(action){\r\n  const sortData = yield select((state) => sortDataSelector(state)(action.payload));\r\n  console.log(action)\r\n}\r\n\r\nfunction* fetchInitialData() {\r\n    const data = yield fetch('http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}')\r\n    .then(response => response.json(),);\r\n    yield put(ActionCreator.setData(data))   \r\n}\r\n\r\n\r\nexport default function* sagaWatcher() {\r\n  yield all([\r\n    takeLatest(ActionType.FETCH_INITIAL_DATA, fetchInitialData),\r\n    takeLatest(ActionType.SORT_DATA, setSortDataSaga)\r\n      ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}