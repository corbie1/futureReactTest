{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corbie\\\\Desktop\\\\testFuture\\\\src\\\\components\\\\pages\\\\users-page.jsx\";\nimport React, { useState } from 'react';\nimport { ActionCreator } from \"../../store/actions\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Table } from '../table/table';\nimport { dataStateSelector, sortDataSelector } from '../../store/selectors';\nexport const UsersPage = () => {\n  const [posts, setPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(50);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const pageNumbers = [];\n  const sortData = useSelector(sortDataSelector);\n\n  for (let i = 1; i <= Math.ceil(sortData / postsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  console.log(pageNumbers);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), pageNumbers.map(number => /*#__PURE__*/React.createElement(\"li\", {\n    key: number,\n    className: \"page-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => paginate(number),\n    href: \"!#\",\n    className: \"page-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, number))));\n};","map":{"version":3,"sources":["C:/Users/corbie/Desktop/testFuture/src/components/pages/users-page.jsx"],"names":["React","useState","ActionCreator","useSelector","useDispatch","Table","dataStateSelector","sortDataSelector","UsersPage","posts","setPosts","currentPage","setCurrentPage","postsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","pageNumbers","sortData","i","Math","ceil","push","console","log","map","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,aAAR,QAA4B,qBAA5B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAAQC,iBAAR,EAA2BC,gBAA3B,QAAkD,uBAAlD;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACY,YAAD,IAAiBZ,QAAQ,CAAC,EAAD,CAA/B;AACF,QAAMa,eAAe,GAAGH,WAAW,GAAGE,YAAtC;AACA,QAAME,gBAAgB,GAAGD,eAAe,GAAGD,YAA3C;AACA,QAAMG,YAAY,GAAGP,KAAK,CAACQ,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB;;AAEA,QAAMI,QAAQ,GAAGC,UAAU,IAAIP,cAAc,CAACO,UAAD,CAA7C;;AAEE,QAAMC,WAAW,GAAG,EAApB;AACA,QAAMC,QAAQ,GAAGlB,WAAW,CAACI,gBAAD,CAA5B;;AACA,OAAK,IAAIe,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUH,QAAQ,GAAGR,YAArB,CAArB,EAAyDS,CAAC,EAA1D,EAA8D;AAC5DF,IAAAA,WAAW,CAACK,IAAZ,CAAiBH,CAAjB;AACD;;AACDI,EAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AAEA,sBACI,uDACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAECA,WAAW,CAACQ,GAAZ,CAAgBC,MAAM,iBACnB;AAAI,IAAA,GAAG,EAAEA,MAAT;AAAiB,IAAA,SAAS,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,OAAO,EAAE,MAAMX,QAAQ,CAACW,MAAD,CAA1B;AAAoC,IAAA,IAAI,EAAC,IAAzC;AAA8C,IAAA,SAAS,EAAC,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MADH,CADF,CADH,CAFD,CADJ;AAYH,CA7BM","sourcesContent":["import React, { useState } from 'react';\r\nimport {ActionCreator} from \"../../store/actions\"\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Table} from '../table/table';\r\nimport {dataStateSelector, sortDataSelector} from '../../store/selectors'\r\n\r\n\r\nexport const UsersPage = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(50);\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n    const pageNumbers = [];\r\n    const sortData = useSelector(sortDataSelector);\r\n    for (let i = 1; i <= Math.ceil(sortData / postsPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n    console.log(pageNumbers);\r\n\r\n    return(\r\n        <>\r\n        <Table/>\r\n        {pageNumbers.map(number => (\r\n            <li key={number} className='page-item'>\r\n              <a onClick={() => paginate(number)} href='!#' className='page-link'>\r\n                {number}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}