{"ast":null,"code":"import { call, put, all, takeLatest, select, throttle } from 'redux-saga/effects';\nimport { ActionType } from '../store/action-types';\nimport { Operation } from '../api/operations';\nimport { ActionCreator } from '../store/actions';\nimport { history } from '../history.js';\n\nasync function getUserJson(url) {\n  let resp;\n\n  try {\n    let data = await fetch(url);\n    resp = {\n      data: await data.json()\n    };\n  } catch (e) {\n    resp = {\n      err: e.message\n    };\n  }\n\n  console.log(resp);\n  return resp;\n}\n\nfunction* fetchUserApi(state, context) {\n  const username = yield select(state => state.user.login);\n\n  try {\n    const {\n      data,\n      err\n    } = yield call(getUserJson, `https://api.github.com/users/${username}`);\n\n    if (data.message != \"Not Found\") {\n      yield put(ActionCreator.getUserAvatarSuccess(data.avatar_url));\n      history.push('/terminals');\n    } else yield put(ActionCreator.getUserAvatarFailure({ ...err.message\n    }));\n  } catch (e) {\n    alert(\"Ошибка, введите логин корректно\");\n    yield put(ActionCreator.getUserAvatarFailure({\n      message: e.message\n    }));\n  }\n}\n\nexport default function* sagaWatcher() {\n  yield all([takeLatest(ActionType.GET_USER_AVATAR, fetchUserApi)]);\n}","map":{"version":3,"sources":["C:/Users/corbie/Desktop/testFuture/src/sagas/sagas.js"],"names":["call","put","all","takeLatest","select","throttle","ActionType","Operation","ActionCreator","history","getUserJson","url","resp","data","fetch","json","e","err","message","console","log","fetchUserApi","state","context","username","user","login","getUserAvatarSuccess","avatar_url","push","getUserAvatarFailure","alert","sagaWatcher","GET_USER_AVATAR"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,UAAzB,EAAqCC,MAArC,EAA6CC,QAA7C,QAA6D,oBAA7D;AACA,SAAQC,UAAR,QAAyB,uBAAzB;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AAEA,SAAQC,OAAR,QAAsB,eAAtB;;AAEA,eAAeC,WAAf,CAA2BC,GAA3B,EAAgC;AAC9B,MAAIC,IAAJ;;AACA,MAAI;AACF,QAAIC,IAAI,GAAG,MAAMC,KAAK,CAACH,GAAD,CAAtB;AACAC,IAAAA,IAAI,GAAG;AAAEC,MAAAA,IAAI,EAAE,MAAMA,IAAI,CAACE,IAAL;AAAd,KAAP;AACD,GAHD,CAIA,OAAMC,CAAN,EAAQ;AACNJ,IAAAA,IAAI,GAAG;AAAEK,MAAAA,GAAG,EAAED,CAAC,CAACE;AAAT,KAAP;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AAEA,SAAOA,IAAP;AACD;;AAKD,UAAUS,YAAV,CAAuBC,KAAvB,EAA8BC,OAA9B,EAAsC;AACpC,QAAMC,QAAQ,GAAG,MAAMpB,MAAM,CAACkB,KAAK,IAAIA,KAAK,CAACG,IAAN,CAAWC,KAArB,CAA7B;;AACA,MAAG;AACD,UAAK;AAACb,MAAAA,IAAD;AAAMI,MAAAA;AAAN,QAAa,MAAMjB,IAAI,CAACU,WAAD,EAAe,gCAA+Bc,QAAS,EAAvD,CAA5B;;AACA,QAAGX,IAAI,CAACK,OAAL,IAAgB,WAAnB,EAA+B;AAC3B,YAAMjB,GAAG,CAACO,aAAa,CAACmB,oBAAd,CAAmCd,IAAI,CAACe,UAAxC,CAAD,CAAT;AACFnB,MAAAA,OAAO,CAACoB,IAAR,CAAa,YAAb;AACD,KAHD,MAKE,MAAM5B,GAAG,CAACO,aAAa,CAACsB,oBAAd,CAAmC,EAAC,GAAGb,GAAG,CAACC;AAAR,KAAnC,CAAD,CAAT;AACH,GARD,CAQE,OAAMF,CAAN,EAAQ;AACRe,IAAAA,KAAK,CAAC,iCAAD,CAAL;AACA,UAAM9B,GAAG,CAACO,aAAa,CAACsB,oBAAd,CAAmC;AAACZ,MAAAA,OAAO,EAAEF,CAAC,CAACE;AAAZ,KAAnC,CAAD,CAAT;AACD;AACF;;AAKD,eAAe,UAAUc,WAAV,GAAwB;AACrC,QAAM9B,GAAG,CAAC,CACRC,UAAU,CAACG,UAAU,CAAC2B,eAAZ,EAA6BZ,YAA7B,CADF,CAAD,CAAT;AAGD","sourcesContent":["import { call, put, all, takeLatest, select, throttle } from 'redux-saga/effects';\r\nimport {ActionType} from '../store/action-types';\r\nimport {Operation} from '../api/operations';\r\nimport {ActionCreator} from '../store/actions';\r\n\r\nimport {history} from '../history.js'\r\n\r\nasync function getUserJson(url) {\r\n  let resp;\r\n  try {\r\n    let data = await fetch(url)\r\n    resp = { data: await data.json() };\r\n  }\r\n  catch(e){\r\n    resp = { err: e.message };\r\n  }\r\n  console.log(resp);\r\n\r\n  return resp;\r\n}\r\n\r\n\r\n\r\n\r\nfunction* fetchUserApi(state, context){\r\n  const username = yield select(state => state.user.login);\r\n  try{\r\n    const{data,err} = yield call(getUserJson, `https://api.github.com/users/${username}`);\r\n    if(data.message != \"Not Found\"){\r\n        yield put(ActionCreator.getUserAvatarSuccess(data.avatar_url))\r\n      history.push('/terminals')\r\n    }\r\n    else\r\n      yield put(ActionCreator.getUserAvatarFailure({...err.message }));\r\n  } catch(e){\r\n    alert(\"Ошибка, введите логин корректно\")\r\n    yield put(ActionCreator.getUserAvatarFailure({message: e.message }));\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default function* sagaWatcher() {\r\n  yield all([\r\n    takeLatest(ActionType.GET_USER_AVATAR, fetchUserApi)\r\n      ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}