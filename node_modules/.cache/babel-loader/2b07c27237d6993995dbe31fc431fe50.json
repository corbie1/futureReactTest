{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corbie\\\\Desktop\\\\testFuture\\\\src\\\\components\\\\pages\\\\users-page.jsx\";\nimport React, { useState } from 'react';\nimport { ActionCreator } from \"../../store/actions\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Table } from '../table/table';\nimport { dataStateSelector, sortDataSelector, usersDataSelector } from '../../store/selectors';\nimport { Preloader } from '../preloader/preloader';\nimport { AddUser } from \"../add-user-form/add-user-form\";\nimport { SearchBar } from '../search-bar/search-bar';\nimport { Pagination } from '../pagination/pagination';\nexport const UsersPage = () => {\n  const users = useSelector(usersDataSelector);\n  console.log([users]);\n  const [posts, setPosts] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage] = useState(50);\n  setPosts(users);\n  console.log(setPosts.length);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentUsers = posts.slice(indexOfFirstPost, indexOfLastPost);\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  const isUsersLoaded = useSelector(dataStateSelector);\n  return isUsersLoaded ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SearchBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(AddUser, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Table, {\n    users: currentUsers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Pagination, {\n    usersPerPage: postsPerPage,\n    totalUsers: users.length,\n    paginate: paginate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(Preloader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/corbie/Desktop/testFuture/src/components/pages/users-page.jsx"],"names":["React","useState","ActionCreator","useSelector","useDispatch","Table","dataStateSelector","sortDataSelector","usersDataSelector","Preloader","AddUser","SearchBar","Pagination","UsersPage","users","console","log","posts","setPosts","currentPage","setCurrentPage","postsPerPage","length","indexOfLastPost","indexOfFirstPost","currentUsers","slice","paginate","pageNumber","isUsersLoaded"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,aAAR,QAA4B,qBAA5B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAAQC,iBAAR,EAA2BC,gBAA3B,EAA6CC,iBAA7C,QAAqE,uBAArE;AACA,SAAQC,SAAR,QAAwB,wBAAxB;AACA,SAAQC,OAAR,QAAqB,gCAArB;AACA,SAAQC,SAAR,QAAwB,0BAAxB;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AAGA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,QAAMC,KAAK,GAAGX,WAAW,CAACK,iBAAD,CAAzB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,KAAD,CAAZ;AAEA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACoB,YAAD,IAAiBpB,QAAQ,CAAC,EAAD,CAA/B;AACAiB,EAAAA,QAAQ,CAACJ,KAAD,CAAR;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACI,MAArB;AAEA,QAAMC,eAAe,GAAGJ,WAAW,GAAGE,YAAtC;AACA,QAAMG,gBAAgB,GAAGD,eAAe,GAAGF,YAA3C;AACA,QAAMI,YAAY,GAAGR,KAAK,CAACS,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAArB;;AAEA,QAAMI,QAAQ,GAAGC,UAAU,IAAIR,cAAc,CAACQ,UAAD,CAA7C;;AAEA,QAAMC,aAAa,GAAG1B,WAAW,CAACG,iBAAD,CAAjC;AACJ,SACAuB,aAAa,gBACL,uDACA,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,eAGA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEJ,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,eAIA,oBAAC,UAAD;AACA,IAAA,YAAY,EAAEJ,YADd;AAEA,IAAA,UAAU,EAAEP,KAAK,CAACQ,MAFlB;AAGA,IAAA,QAAQ,EAAEK,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,CADK,gBAWT,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ;AAcC,CAhCM","sourcesContent":["import React, { useState } from 'react';\r\nimport {ActionCreator} from \"../../store/actions\"\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {Table} from '../table/table';\r\nimport {dataStateSelector, sortDataSelector, usersDataSelector} from '../../store/selectors'\r\nimport {Preloader} from '../preloader/preloader';\r\nimport {AddUser} from\"../add-user-form/add-user-form\";\r\nimport {SearchBar} from '../search-bar/search-bar';\r\nimport {Pagination} from '../pagination/pagination';\r\n\r\n\r\nexport const UsersPage = () => {\r\n    const users = useSelector(usersDataSelector);\r\n    console.log([users]);\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [postsPerPage] = useState(50);\r\n    setPosts(users);\r\n  \r\n    console.log(setPosts.length)\r\n    \r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentUsers = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    \r\n    const isUsersLoaded = useSelector(dataStateSelector);\r\nreturn(\r\nisUsersLoaded ? \r\n        <>\r\n        <SearchBar/>\r\n        <AddUser/>\r\n        <Table users={currentUsers}/>\r\n        <Pagination\r\n        usersPerPage={postsPerPage}\r\n        totalUsers={users.length}\r\n        paginate={paginate}/>\r\n        </>\r\n    : \r\n    <Preloader/>\r\n  )    \r\n}"]},"metadata":{},"sourceType":"module"}