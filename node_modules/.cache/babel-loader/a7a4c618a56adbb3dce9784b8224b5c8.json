{"ast":null,"code":"import { ActionType } from './action-types'; // Передача данных в стор \n\nexport const ActionCreator = {\n  setData: (data, isLoad) => ({\n    type: ActionType.SET_DATA,\n    payload: {\n      data,\n      isLoad\n    }\n  }),\n  getData: url => ({\n    type: ActionType.GET_DATA,\n    url\n  }),\n  removeUser: id => ({\n    type: ActionType.REMOVE_USER,\n    payload: id\n  }),\n  addUser: user => ({\n    type: ActionType.ADD_USER,\n    payload: user\n  }),\n  filterUser: filter => ({\n    type: ActionType.FILTER_USER,\n    payload: filter\n  }),\n  sortData: (sortField, sortType) => ({\n    type: ActionType.SORT_DATA,\n    payload: {\n      sortField,\n      sortType\n    }\n  })\n};","map":{"version":3,"sources":["C:/Users/corbie/Desktop/testFuture/src/store/actions.js"],"names":["ActionType","ActionCreator","setData","data","isLoad","type","SET_DATA","payload","getData","url","GET_DATA","removeUser","id","REMOVE_USER","addUser","user","ADD_USER","filterUser","filter","FILTER_USER","sortData","sortField","sortType","SORT_DATA"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,gBAAzB,C,CACA;;AACA,OAAO,MAAMC,aAAa,GAAG;AACzBC,EAAAA,OAAO,EAAE,CAACC,IAAD,EAAOC,MAAP,MAAkB;AACzBC,IAAAA,IAAI,EAAEL,UAAU,CAACM,QADQ;AAEzBC,IAAAA,OAAO,EAAE;AAACJ,MAAAA,IAAD;AAAOC,MAAAA;AAAP;AAFgB,GAAlB,CADgB;AAKzBI,EAAAA,OAAO,EAAGC,GAAD,KAAS;AAChBJ,IAAAA,IAAI,EAAEL,UAAU,CAACU,QADD;AAEhBD,IAAAA;AAFgB,GAAT,CALgB;AASzBE,EAAAA,UAAU,EAAGC,EAAD,KAAS;AACnBP,IAAAA,IAAI,EAAEL,UAAU,CAACa,WADE;AAEnBN,IAAAA,OAAO,EAAEK;AAFU,GAAT,CATa;AAazBE,EAAAA,OAAO,EAAIC,IAAD,KAAW;AACnBV,IAAAA,IAAI,EAAEL,UAAU,CAACgB,QADE;AAEnBT,IAAAA,OAAO,EAAEQ;AAFU,GAAX,CAbe;AAiBzBE,EAAAA,UAAU,EAAGC,MAAD,KAAa;AACvBb,IAAAA,IAAI,EAAEL,UAAU,CAACmB,WADM;AAEvBZ,IAAAA,OAAO,EAAEW;AAFc,GAAb,CAjBa;AAqBzBE,EAAAA,QAAQ,EAAE,CAACC,SAAD,EAAYC,QAAZ,MAA0B;AAClCjB,IAAAA,IAAI,EAAEL,UAAU,CAACuB,SADiB;AAElChB,IAAAA,OAAO,EAAE;AAACc,MAAAA,SAAD;AAAYC,MAAAA;AAAZ;AAFyB,GAA1B;AArBe,CAAtB","sourcesContent":["import {ActionType} from './action-types';\n// Передача данных в стор \nexport const ActionCreator = {\n    setData: (data, isLoad) =>({\n      type: ActionType.SET_DATA,\n      payload: {data, isLoad}\n    }),\n    getData: (url) =>({\n      type: ActionType.GET_DATA,\n      url\n    }),\n    removeUser: (id) => ({\n      type: ActionType.REMOVE_USER,\n      payload: id\n    }),\n    addUser:  (user) => ({\n      type: ActionType.ADD_USER,\n      payload: user\n    }),\n    filterUser: (filter) => ({\n      type: ActionType.FILTER_USER,\n      payload: filter\n    }),\n    sortData: (sortField, sortType) => ({\n      type: ActionType.SORT_DATA,\n      payload: {sortField, sortType}\n    })\n    \n};\n\n"]},"metadata":{},"sourceType":"module"}