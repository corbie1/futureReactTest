{"ast":null,"code":"import { ActionType } from './action-types'; // Передача данных в стор \n\nexport const ActionCreator = {\n  setData: data => ({\n    type: ActionType.SET_DATA,\n    payload: data\n  }),\n  removeUser: id => ({\n    type: ActionType.REMOVE_USER,\n    payload: id\n  }),\n  addUser: user => ({\n    type: ActionType.ADD_USER,\n    payload: user\n  }),\n  filterUser: filter => ({\n    type: ActionType.FILTER_TEXT,\n    payload: filter\n  }),\n  sortData: (sortField, sortType) => ({\n    type: ActionType.SORT_DATA,\n    payload: {\n      sortField,\n      sortType\n    }\n  })\n};","map":{"version":3,"sources":["C:/Users/corbie/Desktop/testFuture/src/store/actions.js"],"names":["ActionType","ActionCreator","setData","data","type","SET_DATA","payload","removeUser","id","REMOVE_USER","addUser","user","ADD_USER","filterUser","filter","FILTER_TEXT","sortData","sortField","sortType","SORT_DATA"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,gBAAzB,C,CACA;;AACA,OAAO,MAAMC,aAAa,GAAG;AACzBC,EAAAA,OAAO,EAAGC,IAAD,KAAU;AACfC,IAAAA,IAAI,EAAEJ,UAAU,CAACK,QADF;AAEfC,IAAAA,OAAO,EAAEH;AAFM,GAAV,CADgB;AAKzBI,EAAAA,UAAU,EAAGC,EAAD,KAAS;AACrBJ,IAAAA,IAAI,EAAEJ,UAAU,CAACS,WADI;AAErBH,IAAAA,OAAO,EAAEE;AAFY,GAAT,CALa;AASzBE,EAAAA,OAAO,EAAIC,IAAD,KAAW;AACpBP,IAAAA,IAAI,EAAEJ,UAAU,CAACY,QADG;AAEpBN,IAAAA,OAAO,EAAEK;AAFW,GAAX,CATe;AAazBE,EAAAA,UAAU,EAAGC,MAAD,KAAa;AACvBV,IAAAA,IAAI,EAAEJ,UAAU,CAACe,WADM;AAEvBT,IAAAA,OAAO,EAAEQ;AAFc,GAAb,CAba;AAiBzBE,EAAAA,QAAQ,EAAE,CAACC,SAAD,EAAYC,QAAZ,MAA0B;AAClCd,IAAAA,IAAI,EAAEJ,UAAU,CAACmB,SADiB;AAElCb,IAAAA,OAAO,EAAE;AAACW,MAAAA,SAAD;AAAYC,MAAAA;AAAZ;AAFyB,GAA1B;AAjBe,CAAtB","sourcesContent":["import {ActionType} from './action-types';\n// Передача данных в стор \nexport const ActionCreator = {\n    setData: (data) =>({\n        type: ActionType.SET_DATA,\n        payload: data,\n      }),\n    removeUser: (id) => ({\n    type: ActionType.REMOVE_USER,\n    payload: id\n    }),\n    addUser:  (user) => ({\n     type: ActionType.ADD_USER,\n     payload: user\n    }),\n    filterUser: (filter) => ({\n      type: ActionType.FILTER_TEXT,\n      payload: filter\n    }),\n    sortData: (sortField, sortType) => ({\n      type: ActionType.SORT_DATA,\n      payload: {sortField, sortType}\n    })\n    \n};\n\n"]},"metadata":{},"sourceType":"module"}