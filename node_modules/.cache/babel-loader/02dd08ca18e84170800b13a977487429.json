{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corbie\\\\Desktop\\\\testFuture\\\\src\\\\components\\\\pagination\\\\pagination.jsx\";\nimport React, { useState } from 'react';\nimport { ActionCreator } from \"../../store/actions\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { sortDataSelector } from '../../store/selectors';\nexport const Pagination = ({\n  data\n}) => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(data.length / 50); i++) {\n    pageNumbers.push(i);\n  }\n\n  console.log(pageNumbers);\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost); // Change page\n\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, pageNumbers.map(number => /*#__PURE__*/React.createElement(\"li\", {\n    key: number,\n    className: \"page-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    onClick: () => paginate(number),\n    href: \"!#\",\n    className: \"page-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, number))));\n};","map":{"version":3,"sources":["C:/Users/corbie/Desktop/testFuture/src/components/pagination/pagination.jsx"],"names":["React","useState","ActionCreator","useSelector","useDispatch","sortDataSelector","Pagination","data","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","pageNumbers","i","Math","ceil","length","push","console","log","indexOfLastPost","postsPerPage","indexOfFirstPost","currentPosts","slice","paginate","pageNumber","map","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,aAAR,QAA4B,qBAA5B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,gBAAR,QAA+B,uBAA/B;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAW;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C;AAEA,QAAMa,WAAW,GAAG,EAApB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACC,IAAL,CAAUV,IAAI,CAACW,MAAL,GAAc,EAAxB,CAArB,EAAkDH,CAAC,EAAnD,EAAuD;AACrDD,IAAAA,WAAW,CAACK,IAAZ,CAAiBJ,CAAjB;AACD;;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AAEA,QAAMQ,eAAe,GAAGV,WAAW,GAAGW,YAAtC;AACA,QAAMC,gBAAgB,GAAGF,eAAe,GAAGC,YAA3C;AACA,QAAME,YAAY,GAAGjB,KAAK,CAACkB,KAAN,CAAYF,gBAAZ,EAA8BF,eAA9B,CAArB,CAdiC,CAgBjC;;AACA,QAAMK,QAAQ,GAAGC,UAAU,IAAIf,cAAc,CAACe,UAAD,CAA7C;;AACA,sBACI,0CACGd,WAAW,CAACe,GAAZ,CAAgBC,MAAM,iBACrB;AAAI,IAAA,GAAG,EAAEA,MAAT;AAAiB,IAAA,SAAS,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,OAAO,EAAE,MAAMH,QAAQ,CAACG,MAAD,CAA1B;AAAoC,IAAA,IAAI,EAAC,IAAzC;AAA8C,IAAA,SAAS,EAAC,WAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MADH,CADF,CADD,CADH,CADJ;AAWH,CA7BM","sourcesContent":["import React, { useState } from 'react';\r\nimport {ActionCreator} from \"../../store/actions\"\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {sortDataSelector} from '../../store/selectors'\r\n\r\nexport const Pagination = ({data}) =>{\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n  \r\n    const pageNumbers = [];\r\n\r\n    for (let i = 1; i <= Math.ceil(data.length / 50); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n    console.log(pageNumbers)\r\n\r\n    const indexOfLastPost = currentPage * postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n    const currentPosts = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n  \r\n    // Change page\r\n    const paginate = pageNumber => setCurrentPage(pageNumber);\r\n    return(\r\n        <>\r\n          {pageNumbers.map(number => (\r\n            <li key={number} className='page-item'>\r\n              <a onClick={() => paginate(number)} href='!#' className='page-link'>\r\n                {number}\r\n              </a>\r\n            </li>\r\n          ))}\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}