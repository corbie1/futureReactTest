{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corbie\\\\Desktop\\\\testFuture\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport routes from './routes';\nimport { Router } from \"react-router-dom\";\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport { history } from './history.js'; // Store & Api\n\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './store/reducers';\nimport sagaWatcher from './sagas/sagas';\nimport { ActionType } from './store/action-types'; // Components\n\nconst composeEnhancers = typeof window === 'undefined' ? compose : window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(sagaMiddleware)));\nsagaMiddleware.run(sagaWatcher);\n\nconst action = type => store.dispatch({\n  type\n});\n\naction(ActionType.FETCH_INITIAL_DATA);\nReactDOM.render( /*#__PURE__*/React.createElement(React.StrictMode, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Provider, Object.assign({\n  store\n}, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Router, Object.assign({\n  history\n}, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 7\n  }\n}), routes))), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/corbie/Desktop/testFuture/src/index.js"],"names":["React","ReactDOM","App","routes","Router","createStore","applyMiddleware","compose","Provider","history","createSagaMiddleware","rootReducer","sagaWatcher","ActionType","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","sagaMiddleware","store","run","action","type","dispatch","FETCH_INITIAL_DATA","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,SAAQC,GAAR,QAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,SAAQC,WAAR,EAAqBC,eAArB,EAAsCC,OAAtC,QAAoD,OAApD;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAASC,OAAT,QAAwB,cAAxB,C,CAEA;;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,UAAR,QAAyB,sBAAzB,C,CAEA;;AACA,MAAMC,gBAAgB,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgCR,OAAhC,GAA0CQ,MAAM,CAACC,oCAAP,IAA+CT,OAAlH;AAEA,MAAMU,cAAc,GAAIP,oBAAoB,EAA5C;AACA,MAAMQ,KAAK,GAAGb,WAAW,CACvBM,WADuB,EAEvBG,gBAAgB,CAACR,eAAe,CAACW,cAAD,CAAhB,CAFO,CAAzB;AAIAA,cAAc,CAACE,GAAf,CAAmBP,WAAnB;;AACA,MAAMQ,MAAM,GAAGC,IAAI,IAAIH,KAAK,CAACI,QAAN,CAAe;AAACD,EAAAA;AAAD,CAAf,CAAvB;;AACAD,MAAM,CAACP,UAAU,CAACU,kBAAZ,CAAN;AAIAtB,QAAQ,CAACuB,MAAT,eACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,QAAD,gBAAc;AAACN,EAAAA;AAAD,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACE,oBAAC,MAAD,gBAAY;AAACT,EAAAA;AAAD,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IACGN,MADH,CADF,CADF,CADF,EAQEsB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CARF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport routes from './routes';\nimport {Router} from \"react-router-dom\";\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport {Provider} from 'react-redux';\nimport { history } from './history.js'\n\n// Store & Api\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './store/reducers';\nimport sagaWatcher from './sagas/sagas';\nimport {ActionType} from './store/action-types';\n\n// Components\nconst composeEnhancers = typeof window === 'undefined' ? compose : window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst sagaMiddleware  = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware)),\n);\nsagaMiddleware.run(sagaWatcher);\nconst action = type => store.dispatch({type});\naction(ActionType.FETCH_INITIAL_DATA);\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider {...{store}}>\n      <Router {...{history}}>\n        {routes}\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"]},"metadata":{},"sourceType":"module"}