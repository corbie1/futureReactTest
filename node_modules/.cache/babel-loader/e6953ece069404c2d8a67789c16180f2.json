{"ast":null,"code":"import { ActionType } from '../../action-types'; // Дефолтное состояние\n\nconst initialState = {\n  list: []\n}; // Редьюсер изначально принимает в стор дефолтное состояние(выше), а после выполнения экшена возвращает данные\n\nexport default function appReducer(state = initialState, action) {\n  switch (action.type) {\n    case ActionType.SET_TERMINAL:\n      return { ...state,\n        list: [...state.list, action.payload]\n      };\n\n    case ActionType.CHANGE_TERMINAL:\n      const {\n        payload: newState\n      } = action;\n      return { ...state,\n        list: state.list.map(item => {\n          if (item.id === newState.id) {\n            return { ...item,\n              isActive: !item.isActive\n            };\n          }\n\n          return item;\n        })\n      };\n\n    case ActionType.DELETE_TERMINAL:\n      return { ...state,\n        list: state.list.filter(item => item.isActive == false)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/corbie/Desktop/testFuture/src/store/reducers/terminalReducer/terminal.js"],"names":["ActionType","initialState","list","appReducer","state","action","type","SET_TERMINAL","payload","CHANGE_TERMINAL","newState","map","item","id","isActive","DELETE_TERMINAL","filter"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,oBAAzB,C,CAEA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAC;AADc,CAArB,C,CAGA;;AACA,eAAe,SAASC,UAAT,CAAoBC,KAAK,GAAGH,YAA5B,EAA0CI,MAA1C,EAAkD;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,UAAU,CAACO,YAAhB;AACE,aAAO,EACL,GAAGH,KADE;AAELF,QAAAA,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAV,EAAgBG,MAAM,CAACG,OAAvB;AAFD,OAAP;;AAIF,SAAKR,UAAU,CAACS,eAAhB;AACE,YAAM;AAAED,QAAAA,OAAO,EAAEE;AAAX,UAAwBL,MAA9B;AACA,aAAO,EACL,GAAGD,KADE;AAELF,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWS,GAAX,CAAeC,IAAI,IAAI;AAC3B,cAAGA,IAAI,CAACC,EAAL,KAAYH,QAAQ,CAACG,EAAxB,EAA4B;AAC1B,mBAAO,EACL,GAAGD,IADE;AAELE,cAAAA,QAAQ,EAAE,CAACF,IAAI,CAACE;AAFX,aAAP;AAKD;;AACD,iBAAOF,IAAP;AACD,SATK;AAFD,OAAP;;AAaF,SAAKZ,UAAU,CAACe,eAAhB;AACI,aAAO,EACL,GAAGX,KADE;AAELF,QAAAA,IAAI,EAAEE,KAAK,CAACF,IAAN,CAAWc,MAAX,CAAkBJ,IAAI,IAAIA,IAAI,CAACE,QAAL,IAAiB,KAA3C;AAFD,OAAP;;AAIN;AAAS,aAAOV,KAAP;AA1BT;AA4BH","sourcesContent":["import {ActionType} from '../../action-types';\r\n\r\n// Дефолтное состояние\r\nconst initialState = {\r\n  list:[]\r\n};\r\n// Редьюсер изначально принимает в стор дефолтное состояние(выше), а после выполнения экшена возвращает данные\r\nexport default function appReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n      case ActionType.SET_TERMINAL:\r\n        return {\r\n          ...state,\r\n          list: [...state.list, action.payload] \r\n        }\r\n      case ActionType.CHANGE_TERMINAL:\r\n        const { payload: newState } = action;\r\n        return {\r\n          ...state,\r\n          list: state.list.map(item => {\r\n            if(item.id === newState.id) {\r\n              return {\r\n                ...item,\r\n                isActive: !item.isActive,\r\n              \r\n              }\r\n            }\r\n            return item;\r\n          })\r\n        }\r\n      case ActionType.DELETE_TERMINAL:\r\n          return {\r\n            ...state,\r\n            list: state.list.filter(item => item.isActive == false),\r\n          } \r\n    default: return state;\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}