{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corbie\\\\Desktop\\\\testFuture\\\\src\\\\components\\\\table\\\\table.jsx\";\nimport React, { useState } from 'react';\nimport { ActionCreator } from \"../../store/actions\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { SortLink } from \"./sort-link\";\nimport { UserCard } from '../user-card/user-card';\nimport { filterParamSelector } from '../../store/selectors';\nexport const Table = ({\n  currentUsers\n}) => {\n  const dispatch = useDispatch();\n  const [user, setUser] = useState('');\n  const filterParams = useSelector(filterParamSelector);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(SortLink, {\n    label: \"Id\",\n    sortField: \"id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SortLink, {\n    label: \"First Name\",\n    sortField: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(SortLink, {\n    label: \"Last Name\",\n    sortField: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(SortLink, {\n    label: \"Email\",\n    sortField: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }\n  }), /*#__PURE__*/React.createElement(SortLink, {\n    label: \"Phone\",\n    sortField: \"phone\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }\n  }))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, currentUsers.map(item => /*#__PURE__*/React.createElement(\"tr\", {\n    key: item.phone,\n    onClick: () => setUser(item),\n    className: \"people__row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, item.id, filterParams.sortField === \"id\" ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sort__active--asc\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 46\n    }\n  }) : item.id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, item.firstName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, item.lastName), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: item.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, item.email)), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: item.phone,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, item.phone)), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: e => dispatch(ActionCreator.removeUser(item.id)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Delete\"))))), user ? /*#__PURE__*/React.createElement(UserCard, {\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }) : null);\n};","map":{"version":3,"sources":["C:/Users/corbie/Desktop/testFuture/src/components/table/table.jsx"],"names":["React","useState","ActionCreator","useSelector","useDispatch","SortLink","UserCard","filterParamSelector","Table","currentUsers","dispatch","user","setUser","filterParams","map","item","phone","id","sortField","firstName","lastName","email","e","removeUser"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport {ActionCreator} from \"../../store/actions\"\r\nimport {useSelector, useDispatch} from 'react-redux';\r\nimport {SortLink} from \"./sort-link\";\r\nimport {UserCard} from '../user-card/user-card';\r\nimport {filterParamSelector} from '../../store/selectors'\r\n\r\n\r\n\r\nexport const Table = ({currentUsers}) => {\r\n  const dispatch = useDispatch();\r\n  const [user, setUser] = useState('');\r\n  const filterParams = useSelector(filterParamSelector)\r\n  return(\r\n    <>\r\n    <table className=\"table\">\r\n    <thead>\r\n     <tr>\r\n      <SortLink\r\n        label=\"Id\"\r\n        sortField=\"id\"\r\n        />\r\n      <SortLink\r\n        label=\"First Name\"\r\n        sortField=\"firstName\"\r\n        />\r\n       <SortLink\r\n         label=\"Last Name\"\r\n         sortField=\"lastName\"\r\n       />\r\n       <SortLink\r\n         label=\"Email\"\r\n         sortField=\"email\"\r\n       />\r\n       <SortLink\r\n         label=\"Phone\"\r\n         sortField=\"phone\"\r\n       />\r\n     </tr>\r\n    </thead>\r\n    <tbody>\r\n    {currentUsers.map(item => (\r\n      <tr key={item.phone} onClick={() => setUser(item)} className=\"people__row\">\r\n        <td>\r\n          {item.id}\r\n          {filterParams.sortField === \"id\" ? <span className=\"sort__active--asc\"/> : item.id} \r\n        </td>\r\n        <td>{item.firstName}</td>\r\n        <td>{item.lastName}</td>\r\n        <td><a href={item.email}>{item.email}</a></td>\r\n        <td><a href={item.phone}>{item.phone}</a></td>\r\n        <button onClick={(e) => dispatch(ActionCreator.removeUser(item.id))}>Delete</button>\r\n      </tr>\r\n    ))}\r\n  </tbody>\r\n  </table>\r\n  {user ? <UserCard user={user}/> : null}\r\n  </>\r\n  )\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}