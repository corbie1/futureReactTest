{"ast":null,"code":"import axios, { AxiosInstance } from 'axios'; // eslint-disable-line\n\nimport { StatusCode } from '../config/status-codes';\nimport routeConfig from '../config/routes';\nimport { ApiEndpoint } from '../config/api-endpoints';\nexport const createAPI = (onLoginFail = null) => {\n  const api = axios.create({\n    baseURL: ApiEndpoint.BASE_URL\n  });\n\n  const onSuccess = response => response;\n\n  const onFail = err => {\n    if (err.response.request && err.response.request.responseURL.indexOf(routeConfig.SIGN_IN) === -1 && err.response.status === StatusCode.FORBIDDEN) {\n      if (onLoginFail) onLoginFail();\n    }\n\n    throw err;\n  };\n\n  api.interceptors.response.use(onSuccess, onFail);\n  return api;\n};\nexport default createAPI;","map":{"version":3,"sources":["C:/Users/corbie/Desktop/testFuture/src/api/api.js"],"names":["axios","AxiosInstance","StatusCode","routeConfig","ApiEndpoint","createAPI","onLoginFail","api","create","baseURL","BASE_URL","onSuccess","response","onFail","err","request","responseURL","indexOf","SIGN_IN","status","FORBIDDEN","interceptors","use"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC,C,CAA4C;;AAE5C,SAAQC,UAAR,QAAyB,wBAAzB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,WAAW,GAAG,IAAf,KAAwB;AAC7C,QAAMC,GAAG,GAAGP,KAAK,CAACQ,MAAN,CAAa;AACvBC,IAAAA,OAAO,EAAEL,WAAW,CAACM;AADE,GAAb,CAAZ;;AAIA,QAAMC,SAAS,GAAIC,QAAD,IAAcA,QAAhC;;AAEA,QAAMC,MAAM,GAAIC,GAAD,IAAS;AACtB,QAAIA,GAAG,CAACF,QAAJ,CAAaG,OAAb,IACFD,GAAG,CAACF,QAAJ,CAAaG,OAAb,CAAqBC,WAArB,CAAiCC,OAAjC,CAAyCd,WAAW,CAACe,OAArD,MAAkE,CAAC,CADjE,IAEFJ,GAAG,CAACF,QAAJ,CAAaO,MAAb,KAAwBjB,UAAU,CAACkB,SAFrC,EAEgD;AAC9C,UAAGd,WAAH,EAAgBA,WAAW;AAC5B;;AAED,UAAMQ,GAAN;AACD,GARD;;AAUAP,EAAAA,GAAG,CAACc,YAAJ,CAAiBT,QAAjB,CAA0BU,GAA1B,CAA8BX,SAA9B,EAAyCE,MAAzC;AAEA,SAAON,GAAP;AACD,CApBI;AAqBP,eAAeF,SAAf","sourcesContent":["import axios, {AxiosInstance} from 'axios'; // eslint-disable-line\r\n\r\nimport {StatusCode} from '../config/status-codes';\r\nimport routeConfig from '../config/routes';\r\nimport {ApiEndpoint} from '../config/api-endpoints';\r\n\r\nexport const createAPI = (onLoginFail = null) => {\r\n    const api = axios.create({\r\n      baseURL: ApiEndpoint.BASE_URL,\r\n    });\r\n  \r\n    const onSuccess = (response) => response;\r\n  \r\n    const onFail = (err) => {\r\n      if (err.response.request &&\r\n        err.response.request.responseURL.indexOf(routeConfig.SIGN_IN) === -1 &&\r\n        err.response.status === StatusCode.FORBIDDEN) {\r\n        if(onLoginFail) onLoginFail();\r\n      }\r\n  \r\n      throw err;\r\n    };\r\n  \r\n    api.interceptors.response.use(onSuccess, onFail);\r\n  \r\n    return api;\r\n  };\r\nexport default createAPI;\r\n"]},"metadata":{},"sourceType":"module"}